plot(ranks, rac, type = 'p', axes = F, xlab = "Rank in abundance", ylab = "abundance", las = 1, cex.lab = 1.4, cex.axis = 1.25)
box()
axis(side = 1, labels = T, cex.axis = 1.25)
axis(side = 2, las = 1, cex.axis = 1.25)
par <- opar
plot.new()
rac <- RAC(x = RSG_H$`flow[, "BL1-H"]`)
ranks <- as.vector(seq(1,length(rac)))
opar <- par(no.readonly = TRUE)
par(mar = c(5,6,4,2)+0.1)
plot(ranks, rac, type = 'p', axes = F, xlab = "Rank in abundance", ylab = "abundance", las = 1, cex.lab = 1.4, cex.axis = 1.25)
box()
axis(side = 1, labels = T, cex.axis = 1.25)
axis(side = 2, las = 1, cex.axis = 1.25)
par <- opar
plot.new()
rac <- RAC(x = RSG_H$`flow[, "BL1-H"]`)
ranks <- as.vector(seq(1,length(rac)))
opar <- par(no.readonly = TRUE)
par(mar = c(5,6,4,2)+0.1)
plot(ranks, rac, type = 'p', axes = F, xlab = "Rank in abundance", las = 1, cex.lab = 1.4, cex.axis = 1.25)
mtext("abundance", side = 2, line = 5)
box()
axis(side = 1, labels = T, cex.axis = 1.25)
axis(side = 2, las = 1, cex.axis = 1.25)
par <- opar
plot.new()
rac <- RAC(x = RSG_H$`flow[, "BL1-H"]`)
ranks <- as.vector(seq(1,length(rac)))
opar <- par(no.readonly = TRUE)
par(mar = c(5,6,4,2)+0.1)
plot(ranks, rac, type = 'p', axes = F, xlab = "Rank in abundance", las = 1, cex.lab = 1.4, cex.axis = 1.25)
#mtext("abundance", side = 2, line = 5)
box()
axis(side = 1, labels = T, cex.axis = 1.25)
axis(side = 2, las = 1, cex.axis = 1.25)
par <- opar
plot.new()
rac <- RAC(x = RSG_H$`flow[, "BL1-H"]`)
ranks <- as.vector(seq(1,length(rac)))
opar <- par(no.readonly = TRUE)
par(mar = c(5,6,4,2)+0.1)
plot(ranks, rac, type = 'p', axes = F, xlab = "Rank in abundance", las = 1, cex.lab = 1.4, cex.axis = 1.25)
#mtext("abundance", side = 2, line = 5)
box()
axis(side = 1, labels = T, cex.axis = 1.25)
par <- opar
plot.new()
rac <- RAC(x = RSG_H$`flow[, "BL1-H"]`)
ranks <- as.vector(seq(1,length(rac)))
opar <- par(no.readonly = TRUE)
par(mar = c(5,6,4,2)+0.1)
plot(ranks, rac, type = 'p', axes = F, xlab = "Rank in abundance", ylab = "", las = 1, cex.lab = 1.4, cex.axis = 1.25)
mtext("abundance", side = 2, line = 5)
box()
axis(side = 1, labels = T, cex.axis = 1.25)
par <- opar
plot.new()
rac <- RAC(x = RSG_H$`flow[, "BL1-H"]`)
ranks <- as.vector(seq(1,length(rac)))
opar <- par(no.readonly = TRUE)
par(mar = c(5,6,4,2)+0.1)
plot(ranks, rac, type = 'p', axes = F, xlab = "Rank in abundance", ylab = "", las = 1, cex.lab = 1.4, cex.axis = 1.25)
mtext("abundance", side = 2, line = 5)
box()
axis(side = 1, labels = T, cex.axis = 1.25)
axis(side = 2, las = 1, cex.axis = 1.25)
par <- opar
plot.new()
rac <- RAC(x = RSG_H$`flow[, "BL1-H"]`)
ranks <- as.vector(seq(1,length(rac)))
opar <- par(no.readonly = TRUE)
par(mar = c(5,6,4,2)+0.1)
plot(ranks, rac, type = 'p', axes = F, xlab = "Rank in activity", ylab = "", las = 1, cex.lab = 1.4, cex.axis = 1.25)
mtext("RSG-H value", side = 2, line = 5)
box()
axis(side = 1, labels = T, cex.axis = 1.25)
axis(side = 2, las = 1, cex.axis = 1.25)
par <- opar
plot.new()
rac <- RAC(x = RSG_H$`flow[, "BL1-H"]`)
ranks <- as.vector(seq(1,length(rac)))
opar <- par(no.readonly = TRUE)
par(mar = c(5,6,4,2)+0.1)
plot(ranks, rac, type = 'p', axes = F, xlab = "Rank in activity", ylab = "", las = 1, cex.lab = 1.4, cex.axis = 1.25)
mtext("RSG-H value", side = 2, line = 5, cex.lab = 1.4)
box()
axis(side = 1, labels = T, cex.axis = 1.25)
axis(side = 2, las = 1, cex.axis = 1.25)
par <- opar
fcs <- flowCore::read.FCS(file = "../data/B1_Live-RSG.fcs")
flow <- exprs(fcs)
RSG_H <- as.data.frame(flow[,"BL1-H"])
RAC <- function(x = ""){
x = as.vector(x)
x.ab = x[x >0]
x.ab.ranked = x.ab[order(x.ab, decreasing = TRUE)]
return(x.ab.ranked)
}
fcs <- flowCore::read.FCS(file = "../data/B1_Live-RSG.fcs")
flow <- exprs(fcs)
RSG_H <- as.matrix(flow[,"BL1-H"])
plot.new()
rac <- RAC(x = RSG_H)
ranks <- as.vector(seq(1,length(rac)))
opar <- par(no.readonly = TRUE)
par(mar = c(5,6,4,2)+0.1)
plot(ranks, rac, type = 'p', axes = F, xlab = "Rank in activity", ylab = "", las = 1, cex.lab = 1.4, cex.axis = 1.25)
mtext("RSG-H value", side = 2, line = 5, cex.lab = 1.4)
box()
axis(side = 1, labels = T, cex.axis = 1.25)
axis(side = 2, las = 1, cex.axis = 1.25)
par <- opar
fcs <- flowCore::read.FCS(file = "../data/B1_Live-RSG.fcs")
flow <- exprs(fcs)
RSG_H <- as.matrix(flow[,"FSC-H"])
plot.new()
rac <- RAC(x = RSG_H)
ranks <- as.vector(seq(1,length(rac)))
opar <- par(no.readonly = TRUE)
par(mar = c(5,6,4,2)+0.1)
plot(ranks, rac, type = 'p', axes = F, xlab = "Rank in activity", ylab = "", las = 1, cex.lab = 1.4, cex.axis = 1.25)
mtext("RSG-H value", side = 2, line = 5, cex.lab = 1.4)
box()
axis(side = 1, labels = T, cex.axis = 1.25)
axis(side = 2, las = 1, cex.axis = 1.25)
par <- opar
fcs <- flowCore::read.FCS(file = "../data/B1_Live-RSG.fcs")
flow <- exprs(fcs)
RSG_H <- as.matrix(flow[,"BL1-A"])
plot.new()
rac <- RAC(x = RSG_H)
ranks <- as.vector(seq(1,length(rac)))
opar <- par(no.readonly = TRUE)
par(mar = c(5,6,4,2)+0.1)
plot(ranks, rac, type = 'p', axes = F, xlab = "Rank in activity", ylab = "", las = 1, cex.lab = 1.4, cex.axis = 1.25)
mtext("RSG-H value", side = 2, line = 5, cex.lab = 1.4)
box()
axis(side = 1, labels = T, cex.axis = 1.25)
axis(side = 2, las = 1, cex.axis = 1.25)
par <- opar
rm(list = ls())
getwd()
install.packages("BiocManager")
library("BiocManager")
BiocManager::install("flowCore", version = "3.8")
BiocManager::install("ggcyto")
library("BiocManager")
library("flowCore")
library("ggcyto")
fcs_C1 <- flowCore::read.FCS(file = "../data/C1_Live-RSG+SA.fcs")
test1 <-(95.61, 25.12, 24.15, 58.29, 62.68, 63.66, 100.00, 92.20,33.17, 35.12, 64.63, 73.41, 83.17, 99.51, 54.15,83.17,61.95, 96.34,90.24,72.20,73.41,71.71,76.83, 82.44,92.68,74.63, 55.61,99.02,90.98,88.78,98.05,99.02,79.7682.20)
test1 <-c(95.61, 25.12, 24.15, 58.29, 62.68, 63.66, 100.00, 92.20,33.17, 35.12, 64.63, 73.41, 83.17, 99.51, 54.15,83.17,61.95, 96.34,90.24,72.20,73.41,71.71,76.83, 82.44,92.68,74.63, 55.61,99.02,90.98,88.78,98.05,99.02,79.7682.20)
test1 <-c(95.61)
test1 <-c(95.61, 25.12, 24.15, 58.29, 62.68, 63.66, 100.00, 92.20,33.17, 35.12, 64.63, 73.41, 83.17, 99.51, 54.15,83.17,61.95, 96.34,90.24,72.20,73.41,71.71,76.83, 82.44,92.68,74.63, 55.61,99.02,90.98,88.78,98.05,99.02,79.76,82.20)
test1
histogram(test1)
hist(test1)
density(test1)
test1.d<-density(test1)
plot(test1.d)
test1
mean(test1)
median(test1)
sum(test1 > 90)
11/36
sum(test1 > 80)
16/36
sum(test1 < 65)
sum(test1 > 95)
7/36
citation(MPN)
citation("MPN")
k > c(1, -1, 2, 3, -5, 0)
k -> c(1, -1, 2, 3, -5, 0)
k = c(1, -1, 2, 3, -5, 0)
k > 0
k[k < 0]
k[k > 0]
log10(2.51)
10^2.51
10^2.54
rm(list = ls())
getwd()
setwd("~/GitHub/SporeMut")
#require("ggplot2")
#require("cowplot")
require("reshape2")
#require("ggpubr")
require("dplyr")
#require("scales")
require("grid")
require("png")
sem <- function(x, ...){sd(x, na.rm = TRUE)/sqrt(length(na.omit(x)))}
LL.95 <- function(x) t.test(x)$conf.int[1]
UL.95 <- function(x) t.test(x)$conf.int[2]
bfilm <- read.table("data/3.Biofilm/Biofilm_06_16_20.txt", sep= "\t", header = FALSE)
# 100 Lines
Plate1BS<- bfilm[which(bfilm$V1=='plate1'),]
Plate2BS<- bfilm[which(bfilm$V1=='plate2'),]
names(Plate1BS) <- as.matrix(Plate1BS[1,])
Plate1BS<- Plate1BS[-1,]
Plate1BS[]<-lapply(Plate1BS,function(x) type.convert(as.character(x)))
Plate1BS
names(Plate2BS)<- as.matrix(Plate2BS[1,])
Plate2BS<- Plate2BS[-1,]
Plate2BS[]<-lapply(Plate2BS,function(x) type.convert(as.character(x)))
Plate2BS
Plate1BSMelt <- melt(Plate1BS,id=c("plate1", "Replicate"))
names(Plate1BSMelt)<-c("Plate","Replicate","Sample","OD550")
Plate1BSMelt
Plate2BSMelt<-melt(Plate2BS,id=c("plate2", "Replicate"))
names(Plate2BSMelt)<-c("Plate","Replicate","Sample","OD550")
Plate2BSMelt
```
anc <- data %>% filter(Sample == "Ancestor")
anc <- data %>% filter(Sample == "Ancestor")
# Ancestor
anc <- data %>% filter(Sample == "Ancestor")
data <- rbind(Plate1BSMelt, Plate1BSMelt)
# Ancestor
anc <- data %>% filter(Sample == "Ancestor")
anc.mean <- anc %>% summarize(mean = mean(OD550))
anc.sem <- anc %>% summarize(sem = sem(OD550))
anc.95 <- anc %>% summarize(LL.95 = LL.95(OD550), UL.95 = UL.95(OD550))
# Evolved
## Spore fraction
m23 <- data %>% filter(Sample == "M23")
m23.mean <- m23 %>% summarize(mean = mean(OD550))
m23.sem <- m23 %>% summarize(sem = sem(OD550))
m23.95 <- m23 %>% summarize(LL.95 = LL.95(OD550), UL.95 = UL.95(OD550))
m26 <- data %>% filter(Sample == "M26")
m26.mean <- m26 %>% summarize(mean = mean(OD550))
m26.sem <- m26 %>% summarize(sem = sem(OD550))
m26.95 <- m26 %>% summarize(LL.95 = LL.95(OD550), UL.95 = UL.95(OD550))
## Total fraction
### sinR mutants
m17 <- data %>% filter(Sample == "M17")
m17.mean <- m17 %>% summarize(mean = mean(OD550))
m17.sem <- m17 %>% summarize(sem = sem(OD550))
m17.95 <- m17 %>% summarize(LL.95 = LL.95(OD550), UL.95 = UL.95(OD550))
m19 <- data %>% filter(Sample == "M19")
m19.mean <- m19 %>% summarize(mean = mean(OD550))
m19.sem <- m19 %>% summarize(sem = sem(OD550))
m19.95 <- m19 %>% summarize(LL.95 = LL.95(OD550), UL.95 = UL.95(OD550))
m21 <- data %>% filter(Sample == "M21")
m21.mean <- m21 %>% summarize(mean = mean(OD550))
m21.sem <- m21 %>% summarize(sem = sem(OD550))
m21.95 <- m21 %>% summarize(LL.95 = LL.95(OD550), UL.95 = UL.95(OD550))
m41 <- data %>% filter(Sample == "M41")
m41.mean <- m41 %>% summarize(mean = mean(OD550))
m41.sem <- m41 %>% summarize(sem = sem(OD550))
m41.95 <- m41 %>% summarize(LL.95 = LL.95(OD550), UL.95 = UL.95(OD550))
m54 <- data %>% filter(Sample == "M54")
m54.mean <- m54 %>% summarize(mean = mean(OD550))
m54.sem <- m54 %>% summarize(sem = sem(OD550))
m54.95 <- m54 %>% summarize(LL.95 = LL.95(OD550), UL.95 = UL.95(OD550))
### ywcC mutants
m4 <- data %>% filter(Sample == "M4")
m4.mean <- m4 %>% summarize(mean = mean(OD550))
m4.sem <- m4 %>% summarize(sem = sem(OD550))
m4.95 <- m4 %>% summarize(LL.95 = LL.95(OD550), UL.95 = UL.95(OD550))
m13 <- data %>% filter(Sample == "M13")
m13.mean <- m13 %>% summarize(mean = mean(OD550))
m13.sem <- m13 %>% summarize(sem = sem(OD550))
m13.95 <- m13 %>% summarize(LL.95 = LL.95(OD550), UL.95 = UL.95(OD550))
m79 <- data %>% filter(Sample == "M79")
m79.mean <- m79 %>% summarize(mean = mean(OD550))
m79.sem <- m79 %>% summarize(sem = sem(OD550))
m79.95 <- m79 %>% summarize(LL.95 = LL.95(OD550), UL.95 = UL.95(OD550))
m79 <- data %>% filter(Sample == "M79")
m79.mean <- m79 %>% summarize(mean = mean(OD550))
m79.sem <- m79 %>% summarize(sem = sem(OD550))
m79.95 <- m79 %>% summarize(LL.95 = LL.95(OD550), UL.95 = UL.95(OD550))
# Make figure
```{r}
head(data)
data <- data %>%
mutate(evolved = ifelse(Sample == "anc", "anc", "evo"))
data
data <- data %>%
mutate(evolved = ifelse(Sample == "anc", "anc", "evo") %>%
mutate(spore = ifelse(Sample == "m23" | "m26", "spore", "total"))
)
data <- data %>%
mutate(evolved = ifelse(Sample == "anc", "anc", "evo")) %>%
mutate(spore = ifelse(Sample == "m23" | "m26", "spore", "total"))
data <- data %>%
mutate(evolved = ifelse(Sample == "anc", "anc", "evo")) %>%
mutate(spore = ifelse(Sample %in% c( "M23", "M26"), "spore", "total"))
data
View(data)
data <- data %>%
mutate(evolved = ifelse(Sample == "Acnestor", "anc", "evo")) %>%
mutate(cell = ifelse(Sample %in% c("M23", "M26"), "spore", "total"))
data
data <- rbind(Plate1BSMelt, Plate1BSMelt)
data2 <- data %>%
mutate(evolved = ifelse(Sample == "Acnestor", "anc", "evo")) %>%
mutate(cell = ifelse(Sample %in% c("M23", "M26"), "spore", "total"))
data2
View(data2)
data2 <- data %>%
mutate(evolved = ifelse(Sample == "Acnestor", "anc", "evo"))
data2
data2 <- data %>%
mutate(evolved = ifelse(Sample == "Ancestor", "anc", "evo"))
data2
data2 <- data %>%
mutate(evolved = ifelse(Sample == "Ancestor", "anc", "evo")) %>%
mutate(cell = ifelse(Sample %in% c("M23", "M26"), "spore", "total"))
data2
data2 <- data %>%
mutate(evolved = ifelse(Sample == "Ancestor", "anc", "evo")) %>%
mutate(cell = ifelse(Sample %in% c("M23", "M26"), "spore", "total")) %>%
mutate(t.type = ifelse(cell = "spore", "NA",
ifelse(evolved = "anc", "NA",
ifelse(Sample %in% c("M4", "M13", "M79"), "ywcC", "sinR"))))
data2 <- data %>%
mutate(evolved = ifelse(Sample == "Ancestor", "anc", "evo")) %>%
mutate(cell = ifelse(Sample %in% c("M23", "M26"), "spore", "total"))
data2
rlang::last_error()
data2 <- data %>%
mutate(evolved = ifelse(Sample == "Ancestor", "anc", "evo")) %>%
mutate(cell = ifelse(Sample %in% c("M23", "M26"), "spore", "total")) %>%
mutate(t.type = ifelse(cell == "spore", "NA",
ifelse(evolved == "anc", "NA",
ifelse(Sample %in% c("M4", "M13", "M79"), "ywcC", "sinR"))))
data2
test.1 <- lm(OD550 ~ evolved, data = data2)
summary(test.1)
data3 <- data2 %>% filter(evolved != "anc")
data3
# Test 2: spore vs. total
data3 <- data2 %>% filter(evolved != "anc") # remove ancestor
test.2 <- lm(OD550 ~ cell, data = data2)
summary(test.2)
# Test 3: sinR vs. ymcC
data4 <- data3 %>% filter(cell != "spore") # remove spore
data4
data3 <- data2 %>% filter(evolved != "anc") # remove ancestor
test.2 <- lm(OD550 ~ cell, data = data3)
test.2
summary(test.2)
test.3 <- lm(OD550 ~ t.type, data = data3)
summary(test.3)
rm(list=ls())
setwd("~/Github/SporeMute/code/4.GrowthCurves/test")
require("png")
require("dplyr")
require("grid")
require("gtools")
require("nlme")
require("MuMIn")
require("bbmle")
source("../bin/modified_Gomp_diagnostic3.R")
source("~/Github/SporeMute/code/4.GrowthCurves/bin/modified_Gomp_diagnostic3.R")
source("~/Github/SporeMut/code/4.GrowthCurves/bin/modified_Gomp_diagnostic3.R")
sem <- function(x) sqrt(var(x)/length(x))
cv <- function(x) 100*( sd(x)/mean(x))
nm.b1 <- read.csv("../data/batch_NM_1.csv")
nm.b1 <- read.csv("~/Github/SporeMut/code/4.GrowthCurves/data/batch_NM_1.csv")
nm.b1$Time <- as.numeric(sub("^(\\d+):(\\d+).*", "\\1.\\2", nm.b1 $Time))
head(nm.b1, header = T)
nm.0 <-  nm.b1[,c(1,2,12,22)]
nm.10 <-  nm.b1[,c(1,32,41,50)]
nm.20 <-  nm.b1[,c(1,3,13,23)]
nm.30 <-  nm.b1[,c(1,33,42,51)]
nm.40 <-  nm.b1[,c(1,4,14,24)]
nm.50 <-  nm.b1[,c(1,34,43,52)]
nm.60 <-  nm.b1[,c(1,5,15,25)]
nm.80 <-  nm.b1[,c(1,35,44,53)]
nm.100 <-  nm.b1[,c(1,6,16,26)]
nm.120 <-  nm.b1[, c(1,36,45,54)]
nm.140 <-  nm.b1[,c(1,7,17,27)]
nm.160 <-  nm.b1[,c(1,37,46,55)]
nm.200 <-  nm.b1[,c(1,8,18,28)]
nm.220 <-  nm.b1[,c(1,38,47,56)]
nm.240 <-  nm.b1[1:which(nm.b1[,1] == 15.00), c(1,9,19,29)]
nm.260 <-  nm.b1[1:which(nm.b1[,1] == 15.00), c(1,39,48,57)]
nm.280 <-  nm.b1[,c(1,10,20,30)]
nm.300 <-  nm.b1[1:which(nm.b1[,1] == 15.00), c(1,40,49,58)]
jcvi <-  nm.b1[,c(1,11,21,31)]
nm.0 <-  nm.b1[,c(1,2,12,22)]
nm.10 <-  nm.b1[,c(1,32,41,50)]
nm.20 <-  nm.b1[,c(1,3,13,23)]
nm.30 <-  nm.b1[,c(1,33,42,51)]
nm.40 <-  nm.b1[,c(1,4,14,24)]
nm.50 <-  nm.b1[,c(1,34,43,52)]
nm.60 <-  nm.b1[,c(1,5,15,25)]
nm.80 <-  nm.b1[,c(1,35,44,53)]
nm.100 <-  nm.b1[,c(1,6,16,26)]
nm.120 <-  nm.b1[, c(1,36,45,54)]
nm.140 <-  nm.b1[,c(1,7,17,27)]
nm.160 <-  nm.b1[,c(1,37,46,55)]
nm.200 <-  nm.b1[,c(1,8,18,28)]
nm.220 <-  nm.b1[,c(1,38,47,56)]
nm.240 <-  nm.b1[1:which(nm.b1[,1] == 15.00), c(1,9,19,29)]
nm.260 <-  nm.b1[1:which(nm.b1[,1] == 15.00), c(1,39,48,57)]
nm.280 <-  nm.b1[,c(1,10,20,30)]
nm.300 <-  nm.b1[1:which(nm.b1[,1] == 15.00), c(1,40,49,58)]
jcvi <-  nm.b1[,c(1,11,21,31)]
nm.t0.1 <- growth.modGomp(input = nm.0, output.name = "nm.t0.1.parms",
synergy = F, temp = F, smooth = T, trim = T)
setwd("~/Github/SporeMut/code/4.GrowthCurves/test")
rm(list=ls())
setwd("~/Github/SporeMut/code/4.GrowthCurves/test")
```
nm.b1 <- read.csv("~/Github/SporeMut/code/4.GrowthCurves/data/batch_NM_1.csv")
# Change times to numeric
nm.b1$Time <- as.numeric(sub("^(\\d+):(\\d+).*", "\\1.\\2", nm.b1 $Time))
head(nm.b1, header = T)
nm.0 <-  nm.b1[,c(1,2,12,22)]
nm.10 <-  nm.b1[,c(1,32,41,50)]
nm.20 <-  nm.b1[,c(1,3,13,23)]
nm.30 <-  nm.b1[,c(1,33,42,51)]
nm.40 <-  nm.b1[,c(1,4,14,24)]
nm.50 <-  nm.b1[,c(1,34,43,52)]
nm.60 <-  nm.b1[,c(1,5,15,25)]
nm.80 <-  nm.b1[,c(1,35,44,53)]
nm.100 <-  nm.b1[,c(1,6,16,26)]
nm.120 <-  nm.b1[, c(1,36,45,54)]
nm.140 <-  nm.b1[,c(1,7,17,27)]
nm.160 <-  nm.b1[,c(1,37,46,55)]
nm.200 <-  nm.b1[,c(1,8,18,28)]
nm.220 <-  nm.b1[,c(1,38,47,56)]
nm.240 <-  nm.b1[1:which(nm.b1[,1] == 15.00), c(1,9,19,29)]
nm.260 <-  nm.b1[1:which(nm.b1[,1] == 15.00), c(1,39,48,57)]
nm.280 <-  nm.b1[,c(1,10,20,30)]
nm.300 <-  nm.b1[1:which(nm.b1[,1] == 15.00), c(1,40,49,58)]
jcvi <-  nm.b1[,c(1,11,21,31)]
nm.t0.1 <- growth.modGomp(input = nm.0, output.name = "nm.t0.1.parms",
synergy = F, temp = F, smooth = T, trim = T)
rm(list=ls())
setwd("~/Github/SporeMut/code/4.GrowthCurves/")
require("png")
require("dplyr")
require("grid")
require("gtools")
require("nlme")
require("MuMIn")
require("bbmle")
source("~/Github/SporeMut/code/4.GrowthCurves/bin/modified_Gomp_diagnostic3.R")
sem <- function(x) sqrt(var(x)/length(x))
cv <- function(x) 100*( sd(x)/mean(x))
nm.b1 <- read.csv("~/Github/SporeMut/code/4.GrowthCurves/data/batch_NM_1.csv")
nm.b1$Time <- as.numeric(sub("^(\\d+):(\\d+).*", "\\1.\\2", nm.b1 $Time))
head(nm.b1, header = T)
nm.0 <-  nm.b1[,c(1,2,12,22)]
nm.10 <-  nm.b1[,c(1,32,41,50)]
nm.20 <-  nm.b1[,c(1,3,13,23)]
nm.30 <-  nm.b1[,c(1,33,42,51)]
nm.40 <-  nm.b1[,c(1,4,14,24)]
nm.50 <-  nm.b1[,c(1,34,43,52)]
nm.60 <-  nm.b1[,c(1,5,15,25)]
nm.80 <-  nm.b1[,c(1,35,44,53)]
nm.100 <-  nm.b1[,c(1,6,16,26)]
nm.120 <-  nm.b1[, c(1,36,45,54)]
nm.140 <-  nm.b1[,c(1,7,17,27)]
nm.160 <-  nm.b1[,c(1,37,46,55)]
nm.200 <-  nm.b1[,c(1,8,18,28)]
nm.220 <-  nm.b1[,c(1,38,47,56)]
nm.240 <-  nm.b1[1:which(nm.b1[,1] == 15.00), c(1,9,19,29)]
nm.260 <-  nm.b1[1:which(nm.b1[,1] == 15.00), c(1,39,48,57)]
nm.280 <-  nm.b1[,c(1,10,20,30)]
nm.300 <-  nm.b1[1:which(nm.b1[,1] == 15.00), c(1,40,49,58)]
jcvi <-  nm.b1[,c(1,11,21,31)]
nm.t0.1 <- growth.modGomp(input = nm.0, output.name = "nm.t0.1.parms",
synergy = F, temp = F, smooth = T, trim = T)
rm(list=ls())
setwd("~/Github/SporeMut/code/4.GrowthCurves/test")
require("png")
require("dplyr")
require("grid")
require("gtools")
require("nlme")
require("MuMIn")
require("bbmle")
source("~/Github/SporeMut/code/4.GrowthCurves/bin/modified_Gomp_diagnostic3.R")
sem <- function(x) sqrt(var(x)/length(x))
cv <- function(x) 100*( sd(x)/mean(x))
nm.b1 <- read.csv("~/Github/SporeMut/code/4.GrowthCurves/data/batch_NM_1.csv")
nm.b1$Time <- as.numeric(sub("^(\\d+):(\\d+).*", "\\1.\\2", nm.b1 $Time))
head(nm.b1, header = T)
nm.0 <-  nm.b1[,c(1,2,12,22)]
nm.10 <-  nm.b1[,c(1,32,41,50)]
nm.20 <-  nm.b1[,c(1,3,13,23)]
nm.30 <-  nm.b1[,c(1,33,42,51)]
nm.40 <-  nm.b1[,c(1,4,14,24)]
nm.50 <-  nm.b1[,c(1,34,43,52)]
nm.60 <-  nm.b1[,c(1,5,15,25)]
nm.80 <-  nm.b1[,c(1,35,44,53)]
nm.100 <-  nm.b1[,c(1,6,16,26)]
nm.120 <-  nm.b1[, c(1,36,45,54)]
nm.140 <-  nm.b1[,c(1,7,17,27)]
nm.160 <-  nm.b1[,c(1,37,46,55)]
nm.200 <-  nm.b1[,c(1,8,18,28)]
nm.220 <-  nm.b1[,c(1,38,47,56)]
nm.240 <-  nm.b1[1:which(nm.b1[,1] == 15.00), c(1,9,19,29)]
nm.260 <-  nm.b1[1:which(nm.b1[,1] == 15.00), c(1,39,48,57)]
nm.280 <-  nm.b1[,c(1,10,20,30)]
nm.300 <-  nm.b1[1:which(nm.b1[,1] == 15.00), c(1,40,49,58)]
jcvi <-  nm.b1[,c(1,11,21,31)]
nm.t0.1 <- growth.modGomp(input = nm.0, output.name = "nm.t0.1.parms",
synergy = F, temp = F, smooth = T, trim = T)
t0.out.nm.1 <- read.table("../output/nm.t0.1.parms.txt", sep = ",", header=TRUE)
t10.out.nm.1 <- read.table("../output/nm.t10.1.parms.txt", sep = ",", header=TRUE)
treats.nm.1[rep(seq_len(nrow(treats.nm.1)), each = 19), ]
treats.nm.1[rep(seq_len(nrow(treats.nm.1)), each = 19), ]
treats.nm.1 <- read.csv("../data/treatments_batch1_NM.csv")
treats.nm.1[rep(seq_len(nrow(treats.nm.1)), each = 19), ]
