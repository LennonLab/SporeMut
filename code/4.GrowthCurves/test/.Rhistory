bg = "grey75", col = "grey75", lwd = 2, cex = 1.7)
points(jitter(rep(4, length(m26$umax)), amount = 0.1), m26$umax, pch = 21,
bg = "grey75", col = "grey75", lwd = 2, cex = 1.7)
# Total mutants: sinR
points(jitter(rep(6, length(m17$umax)), amount = 0.1), m17$umax, pch = 21,
bg = "grey75", col = "grey75", lwd = 2, cex = 1.7)
points(jitter(rep(7, length(m19$umax)), amount = 0.1), m17$umax, pch = 21,
bg = "grey75", col = "grey75", lwd = 2, cex = 1.7)
points(jitter(rep(8, length(m21$umax)), amount = 0.1), m21$umax, pch = 21,
bg = "grey75", col = "grey75", lwd = 2, cex = 1.7)
points(jitter(rep(9, length(m41$umax)), amount = 0.1), m41$umax, pch = 21,
bg = "grey75", col = "grey75", lwd = 2, cex = 1.7)
points(jitter(rep(10, length(m54$umax)), amount = 0.1), m54$umax, pch = 21,
bg = "grey75", col = "grey75", lwd = 2, cex = 1.7)
# Total mutants: ywcC
points(jitter(rep(12, length(m4$umax)), amount = 0.1), m4$umax, pch = 21,
bg = "grey75", col = "grey75", lwd = 2, cex = 1.7)
points(jitter(rep(13, length(m13$umax)), amount = 0.1), m13$umax, pch = 21,
bg = "grey75", col = "grey75", lwd = 2, cex = 1.7)
points(jitter(rep(14, length(m79$umax)), amount = 0.1), m79$umax,pch = 21,
bg = "grey75", col = "grey75", lwd = 2, cex = 1.7)
# Add means
points(1, anc.mean[2], pch = 21, col = "black",
bg = "NA", lwd = 2, cex = 2)
points(3, m23.mean[2], pch = 21, col = "black",
bg = "NA", lwd = 2, cex = 2)
points(4, m26.mean[2], pch = 21, col = "black",
bg = "NA", lwd = 2, cex = 2)
points(6, m17.mean[2], pch = 21, col = "black",
bg = "NA", lwd = 2, cex = 2)
points(7, m19.mean[2], pch = 21, col = "black",
bg = "NA", lwd = 2, cex = 2)
points(8, m21.mean[2], pch = 21, col = "black",
bg = "NA", lwd = 2, cex = 2)
points(9, m41.mean[2], pch = 21, col = "black",
bg = "NA", lwd = 2, cex = 2)
points(10, m54.mean[2], pch = 21, col = "black",
bg = "NA", lwd = 2, cex = 2)
points(12, m4.mean[2], pch = 21, col = "black",
bg = "NA", lwd = 2, cex = 2)
points(13, m13.mean[2], pch = 21, col = "black",
bg = "NA", lwd = 2, cex = 2)
points(14, m79.mean[2], pch = 21, col = "black",
bg = "NA", lwd = 2, cex = 2)
arrows(x0 = c(1, 3, 4, 6, 7, 8, 9, 10, 12, 13, 14), y0 = as.numeric(c(anc.mean[2], m23.mean[2],
m26.mean[2], m17.mean[2], m19.mean[2], m21.mean[2], m41.mean[2], m54.mean[2],
m4.mean[2], m13.mean[2], m79.mean[2])), y1 = as.numeric(c(anc.95UL[2], m23.95UL[2],
m26.95UL[2], m17.95UL[2], m19.95UL[2], m21.95UL[2], m41.95UL[2],
m54.95UL[2], m4.95UL[2], m13.95UL[2], m79.95UL[2])), angle = 90, length = 0.1, lwd = 2)
arrows(x0 = c(1, 3, 4, 6, 7, 8, 9, 10, 12, 13, 14), y0 = as.numeric(c(anc.mean[2], m23.mean[2],
m26.mean[2], m17.mean[2], m19.mean[2], m21.mean[2], m41.mean[2], m54.mean[2],
m4.mean[2], m13.mean[2], m79.mean[2])), y1 = as.numeric(c(anc.95LL[2], m23.95LL[2],
m26.95LL[2], m17.95LL[2], m19.95LL[2], m21.95LL[2], m41.95LL[2],
m54.95LL[2], m4.95LL[2], m13.95LL[2], m79.95LL[2])), angle = 90, length = 0.1, lwd = 2)
# Add axes
axis(side = 2, lwd.ticks = 2, cex.axis = 1.25, las = 1,
labels = c("0.025", "0.050", "0.075", "0.100"), at = c(0.025, 0.05, 0.075, 0.100))
axis(side = 4, lwd.ticks = 2, cex.axis = 1.25, las = 1,
at=c(0.025, 0.05, 0.075, 0.100), labels = F)
axis(side = 3, lwd.ticks = 2, cex.axis = 1, las = 1,
at = c(1, 3, 4, 6, 7, 8, 9, 10, 12, 13, 14), labels = F)
axis(side = 1, lwd.ticks = 2, cex.axis = 1, las = 3,
labels = c("anc", "m23", "m26", "m17", "m19", "m21", "m41", "m54", "m4",
"m13", "m79"), at = c(1, 3, 4, 6, 7, 8, 9, 10, 12, 13, 14), col.axis = "grey80")
# Add y-axis label
mtext(expression('Maximum growth rate (d'^-1*')'), side = 2,
outer = FALSE, cex = 1.25, line = 4.5, adj = 0.5)
# Add x-axis labels
mtext('Ancestor', side = 1, line = 6.25, at = 1, cex = 0.95, col = "grey80")
segments(0.25, -0.047, 1.75, -0.047, col = "grey80", lwd = 2, xpd = TRUE)
mtext('Evolved', side = 1, line = 6.25, at = 8.5, cex = 0.95, col = "grey80")
segments(2.75, -0.047, 14.25, -0.045, col = "grey80", lwd = 2, xpd = TRUE)
mtext('Spore', side = 1, line = 4.5, at = 3.5, cex = 0.95, col = "grey80")
segments(2.75, -0.03, 4.25, -0.03, col = "grey80", lwd = 2, xpd = TRUE)
mtext('Total', side = 1, line = 4.5, at = 10.5, cex = 0.95, col = "grey80")
segments(5.75, -0.03, 14.25, -0.03, col = "grey80", lwd = 2, xpd = TRUE)
mtext(expression(italic("sinR")), side = 1, line = 2.95, at = 8, cex = 0.95, col = "grey80")
segments(5.75, -0.02, 10.25, -0.0175, col = "grey80", lwd = 2, xpd = TRUE)
mtext(expression(italic("ywcC")), side = 1, line = 2.95, at = 13, cex = 0.95, col = "grey80")
segments(11.75, 0.0295, 14.25, 0.0295, col = "grey80", lwd = 2, xpd = TRUE)
# Close Plot Device
dev.off()
graphics.off()
# Show Plot
img <- readPNG("~/GitHub/SporeMut/output/4.GrowthCurves/growth.umax.png")
grid.raster(img)
png(filename="~/GitHub/SporeMut/output/4.GrowthCurves/growth.umax.png",
width = 1200, height = 800, res = 96*2)
plot.new()
par(mar = c(7, 7, 5, 7), plt = c(0.2, 0.85, 0.45, 0.85))
# Add individuals points
anc.pt <- plot(jitter(rep(1, length(anc$umax)), amount = 0.1), anc$umax,
ylim = c(0.02, 0.1), xlim = c(0.5, 15), pch = 21, col = "grey75",
bg = "grey75", lwd = 2,
cex = 1.7, yaxt = "n", xaxt = "n", cex.lab = 2, cex.axis = 1.5,
las = 1, ylab = "", xlab = "")
box(lwd = 2)
# Spore mutants
points(jitter(rep(3, length(m23$umax)), amount = 0.1), m23$umax, pch = 21,
bg = "grey75", col = "grey75", lwd = 2, cex = 1.7)
points(jitter(rep(4, length(m26$umax)), amount = 0.1), m26$umax, pch = 21,
bg = "grey75", col = "grey75", lwd = 2, cex = 1.7)
# Total mutants: sinR
points(jitter(rep(6, length(m17$umax)), amount = 0.1), m17$umax, pch = 21,
bg = "grey75", col = "grey75", lwd = 2, cex = 1.7)
points(jitter(rep(7, length(m19$umax)), amount = 0.1), m17$umax, pch = 21,
bg = "grey75", col = "grey75", lwd = 2, cex = 1.7)
points(jitter(rep(8, length(m21$umax)), amount = 0.1), m21$umax, pch = 21,
bg = "grey75", col = "grey75", lwd = 2, cex = 1.7)
points(jitter(rep(9, length(m41$umax)), amount = 0.1), m41$umax, pch = 21,
bg = "grey75", col = "grey75", lwd = 2, cex = 1.7)
points(jitter(rep(10, length(m54$umax)), amount = 0.1), m54$umax, pch = 21,
bg = "grey75", col = "grey75", lwd = 2, cex = 1.7)
# Total mutants: ywcC
points(jitter(rep(12, length(m4$umax)), amount = 0.1), m4$umax, pch = 21,
bg = "grey75", col = "grey75", lwd = 2, cex = 1.7)
points(jitter(rep(13, length(m13$umax)), amount = 0.1), m13$umax, pch = 21,
bg = "grey75", col = "grey75", lwd = 2, cex = 1.7)
points(jitter(rep(14, length(m79$umax)), amount = 0.1), m79$umax,pch = 21,
bg = "grey75", col = "grey75", lwd = 2, cex = 1.7)
# Add means
points(1, anc.mean[2], pch = 21, col = "black",
bg = "NA", lwd = 2, cex = 2)
points(3, m23.mean[2], pch = 21, col = "black",
bg = "NA", lwd = 2, cex = 2)
points(4, m26.mean[2], pch = 21, col = "black",
bg = "NA", lwd = 2, cex = 2)
points(6, m17.mean[2], pch = 21, col = "black",
bg = "NA", lwd = 2, cex = 2)
points(7, m19.mean[2], pch = 21, col = "black",
bg = "NA", lwd = 2, cex = 2)
points(8, m21.mean[2], pch = 21, col = "black",
bg = "NA", lwd = 2, cex = 2)
points(9, m41.mean[2], pch = 21, col = "black",
bg = "NA", lwd = 2, cex = 2)
points(10, m54.mean[2], pch = 21, col = "black",
bg = "NA", lwd = 2, cex = 2)
points(12, m4.mean[2], pch = 21, col = "black",
bg = "NA", lwd = 2, cex = 2)
points(13, m13.mean[2], pch = 21, col = "black",
bg = "NA", lwd = 2, cex = 2)
points(14, m79.mean[2], pch = 21, col = "black",
bg = "NA", lwd = 2, cex = 2)
arrows(x0 = c(1, 3, 4, 6, 7, 8, 9, 10, 12, 13, 14), y0 = as.numeric(c(anc.mean[2], m23.mean[2],
m26.mean[2], m17.mean[2], m19.mean[2], m21.mean[2], m41.mean[2], m54.mean[2],
m4.mean[2], m13.mean[2], m79.mean[2])), y1 = as.numeric(c(anc.95UL[2], m23.95UL[2],
m26.95UL[2], m17.95UL[2], m19.95UL[2], m21.95UL[2], m41.95UL[2],
m54.95UL[2], m4.95UL[2], m13.95UL[2], m79.95UL[2])), angle = 90, length = 0.1, lwd = 2)
arrows(x0 = c(1, 3, 4, 6, 7, 8, 9, 10, 12, 13, 14), y0 = as.numeric(c(anc.mean[2], m23.mean[2],
m26.mean[2], m17.mean[2], m19.mean[2], m21.mean[2], m41.mean[2], m54.mean[2],
m4.mean[2], m13.mean[2], m79.mean[2])), y1 = as.numeric(c(anc.95LL[2], m23.95LL[2],
m26.95LL[2], m17.95LL[2], m19.95LL[2], m21.95LL[2], m41.95LL[2],
m54.95LL[2], m4.95LL[2], m13.95LL[2], m79.95LL[2])), angle = 90, length = 0.1, lwd = 2)
# Add axes
axis(side = 2, lwd.ticks = 2, cex.axis = 1.25, las = 1,
labels = c("0.025", "0.050", "0.075", "0.100"), at = c(0.025, 0.05, 0.075, 0.100))
axis(side = 4, lwd.ticks = 2, cex.axis = 1.25, las = 1,
at=c(0.025, 0.05, 0.075, 0.100), labels = F)
axis(side = 3, lwd.ticks = 2, cex.axis = 1, las = 1,
at = c(1, 3, 4, 6, 7, 8, 9, 10, 12, 13, 14), labels = F)
axis(side = 1, lwd.ticks = 2, cex.axis = 1, las = 3,
labels = c("anc", "m23", "m26", "m17", "m19", "m21", "m41", "m54", "m4",
"m13", "m79"), at = c(1, 3, 4, 6, 7, 8, 9, 10, 12, 13, 14), col.axis = "grey80")
# Add y-axis label
mtext(expression('Maximum growth rate (d'^-1*')'), side = 2,
outer = FALSE, cex = 1.25, line = 4.5, adj = 0.5)
# Add x-axis labels
mtext('Ancestor', side = 1, line = 6.25, at = 1, cex = 0.95, col = "grey80")
segments(0.25, -0.047, 1.75, -0.047, col = "grey80", lwd = 2, xpd = TRUE)
mtext('Evolved', side = 1, line = 6.25, at = 8.5, cex = 0.95, col = "grey80")
segments(2.75, -0.047, 14.25, -0.047, col = "grey80", lwd = 2, xpd = TRUE)
mtext('Spore', side = 1, line = 4.5, at = 3.5, cex = 0.95, col = "grey80")
segments(2.75, -0.032, 4.25, -0.032, col = "grey80", lwd = 2, xpd = TRUE)
mtext('Total', side = 1, line = 4.5, at = 10.5, cex = 0.95, col = "grey80")
segments(5.75, -0.032, 14.25, -0.023, col = "grey80", lwd = 2, xpd = TRUE)
mtext(expression(italic("sinR")), side = 1, line = 2.95, at = 8, cex = 0.95, col = "grey80")
segments(5.75, -0.01, 10.25, -0.013, col = "grey80", lwd = 2, xpd = TRUE)
mtext(expression(italic("ywcC")), side = 1, line = 2.95, at = 13, cex = 0.95, col = "grey80")
segments(11.75, 0.0295, 14.25, 0.0295, col = "grey80", lwd = 2, xpd = TRUE)
# Close Plot Device
dev.off()
graphics.off()
# Show Plot
img <- readPNG("~/GitHub/SporeMut/output/4.GrowthCurves/growth.umax.png")
grid.raster(img)
png(filename="~/GitHub/SporeMut/output/4.GrowthCurves/growth.umax.png",
width = 1200, height = 800, res = 96*2)
plot.new()
par(mar = c(7, 7, 5, 7), plt = c(0.2, 0.85, 0.45, 0.85))
# Add individuals points
anc.pt <- plot(jitter(rep(1, length(anc$umax)), amount = 0.1), anc$umax,
ylim = c(0.02, 0.1), xlim = c(0.5, 15), pch = 21, col = "grey75",
bg = "grey75", lwd = 2,
cex = 1.7, yaxt = "n", xaxt = "n", cex.lab = 2, cex.axis = 1.5,
las = 1, ylab = "", xlab = "")
box(lwd = 2)
# Spore mutants
points(jitter(rep(3, length(m23$umax)), amount = 0.1), m23$umax, pch = 21,
bg = "grey75", col = "grey75", lwd = 2, cex = 1.7)
points(jitter(rep(4, length(m26$umax)), amount = 0.1), m26$umax, pch = 21,
bg = "grey75", col = "grey75", lwd = 2, cex = 1.7)
# Total mutants: sinR
points(jitter(rep(6, length(m17$umax)), amount = 0.1), m17$umax, pch = 21,
bg = "grey75", col = "grey75", lwd = 2, cex = 1.7)
points(jitter(rep(7, length(m19$umax)), amount = 0.1), m17$umax, pch = 21,
bg = "grey75", col = "grey75", lwd = 2, cex = 1.7)
points(jitter(rep(8, length(m21$umax)), amount = 0.1), m21$umax, pch = 21,
bg = "grey75", col = "grey75", lwd = 2, cex = 1.7)
points(jitter(rep(9, length(m41$umax)), amount = 0.1), m41$umax, pch = 21,
bg = "grey75", col = "grey75", lwd = 2, cex = 1.7)
points(jitter(rep(10, length(m54$umax)), amount = 0.1), m54$umax, pch = 21,
bg = "grey75", col = "grey75", lwd = 2, cex = 1.7)
# Total mutants: ywcC
points(jitter(rep(12, length(m4$umax)), amount = 0.1), m4$umax, pch = 21,
bg = "grey75", col = "grey75", lwd = 2, cex = 1.7)
points(jitter(rep(13, length(m13$umax)), amount = 0.1), m13$umax, pch = 21,
bg = "grey75", col = "grey75", lwd = 2, cex = 1.7)
points(jitter(rep(14, length(m79$umax)), amount = 0.1), m79$umax,pch = 21,
bg = "grey75", col = "grey75", lwd = 2, cex = 1.7)
# Add means
points(1, anc.mean[2], pch = 21, col = "black",
bg = "NA", lwd = 2, cex = 2)
points(3, m23.mean[2], pch = 21, col = "black",
bg = "NA", lwd = 2, cex = 2)
points(4, m26.mean[2], pch = 21, col = "black",
bg = "NA", lwd = 2, cex = 2)
points(6, m17.mean[2], pch = 21, col = "black",
bg = "NA", lwd = 2, cex = 2)
points(7, m19.mean[2], pch = 21, col = "black",
bg = "NA", lwd = 2, cex = 2)
points(8, m21.mean[2], pch = 21, col = "black",
bg = "NA", lwd = 2, cex = 2)
points(9, m41.mean[2], pch = 21, col = "black",
bg = "NA", lwd = 2, cex = 2)
points(10, m54.mean[2], pch = 21, col = "black",
bg = "NA", lwd = 2, cex = 2)
points(12, m4.mean[2], pch = 21, col = "black",
bg = "NA", lwd = 2, cex = 2)
points(13, m13.mean[2], pch = 21, col = "black",
bg = "NA", lwd = 2, cex = 2)
points(14, m79.mean[2], pch = 21, col = "black",
bg = "NA", lwd = 2, cex = 2)
arrows(x0 = c(1, 3, 4, 6, 7, 8, 9, 10, 12, 13, 14), y0 = as.numeric(c(anc.mean[2], m23.mean[2],
m26.mean[2], m17.mean[2], m19.mean[2], m21.mean[2], m41.mean[2], m54.mean[2],
m4.mean[2], m13.mean[2], m79.mean[2])), y1 = as.numeric(c(anc.95UL[2], m23.95UL[2],
m26.95UL[2], m17.95UL[2], m19.95UL[2], m21.95UL[2], m41.95UL[2],
m54.95UL[2], m4.95UL[2], m13.95UL[2], m79.95UL[2])), angle = 90, length = 0.1, lwd = 2)
arrows(x0 = c(1, 3, 4, 6, 7, 8, 9, 10, 12, 13, 14), y0 = as.numeric(c(anc.mean[2], m23.mean[2],
m26.mean[2], m17.mean[2], m19.mean[2], m21.mean[2], m41.mean[2], m54.mean[2],
m4.mean[2], m13.mean[2], m79.mean[2])), y1 = as.numeric(c(anc.95LL[2], m23.95LL[2],
m26.95LL[2], m17.95LL[2], m19.95LL[2], m21.95LL[2], m41.95LL[2],
m54.95LL[2], m4.95LL[2], m13.95LL[2], m79.95LL[2])), angle = 90, length = 0.1, lwd = 2)
# Add axes
axis(side = 2, lwd.ticks = 2, cex.axis = 1.25, las = 1,
labels = c("0.025", "0.050", "0.075", "0.100"), at = c(0.025, 0.05, 0.075, 0.100))
axis(side = 4, lwd.ticks = 2, cex.axis = 1.25, las = 1,
at=c(0.025, 0.05, 0.075, 0.100), labels = F)
axis(side = 3, lwd.ticks = 2, cex.axis = 1, las = 1,
at = c(1, 3, 4, 6, 7, 8, 9, 10, 12, 13, 14), labels = F)
axis(side = 1, lwd.ticks = 2, cex.axis = 1, las = 3,
labels = c("anc", "m23", "m26", "m17", "m19", "m21", "m41", "m54", "m4",
"m13", "m79"), at = c(1, 3, 4, 6, 7, 8, 9, 10, 12, 13, 14), col.axis = "grey80")
# Add y-axis label
mtext(expression('Maximum growth rate (d'^-1*')'), side = 2,
outer = FALSE, cex = 1.25, line = 4.5, adj = 0.5)
# Add x-axis labels
mtext('Ancestor', side = 1, line = 6.25, at = 1, cex = 0.95, col = "grey80")
segments(0.25, -0.047, 1.75, -0.047, col = "grey80", lwd = 2, xpd = TRUE)
mtext('Evolved', side = 1, line = 6.25, at = 8.5, cex = 0.95, col = "grey80")
segments(2.75, -0.047, 14.25, -0.047, col = "grey80", lwd = 2, xpd = TRUE)
mtext('Spore', side = 1, line = 4.5, at = 3.5, cex = 0.95, col = "grey80")
segments(2.75, -0.03, 4.25, -0.03, col = "grey80", lwd = 2, xpd = TRUE)
mtext('Total', side = 1, line = 4.5, at = 10.5, cex = 0.95, col = "grey80")
segments(5.75, -0.03, 14.25, -0.03, col = "grey80", lwd = 2, xpd = TRUE)
mtext(expression(italic("sinR")), side = 1, line = 2.95, at = 8, cex = 0.95, col = "grey80")
segments(5.75, -0.013, 10.25, -0.013, col = "grey80", lwd = 2, xpd = TRUE)
mtext(expression(italic("ywcC")), side = 1, line = 2.95, at = 13, cex = 0.95, col = "grey80")
segments(11.75, -0.013, 14.25, -0.013, col = "grey80", lwd = 2, xpd = TRUE)
# Close Plot Device
dev.off()
graphics.off()
# Show Plot
img <- readPNG("~/GitHub/SporeMut/output/4.GrowthCurves/growth.umax.png")
grid.raster(img)
dat <- read.csv("~/Github/SporeMut/code/4.GrowthCurves/data/20230802_GrowthCurve_SporeMut.csv")
dat$Time <- as.numeric(sub("^(\\d+):(\\d+).*", "\\1.\\2", dat$Time))
dat <- read.csv("~/Github/SporeMut/code/4.GrowthCurves/data/20230802_GrowthCurve_SporeMut.csv")
dat$Time <- as.numeric(sub("^(\\d+):(\\d+).*", "\\1.\\2", dat$Time))
# Slow process: comment out line below after running
# fits <- growth.modGomp(input = dat, output.name = "fit.parms",
#        synergy = F, temp = F, smooth = T, trim = T)
fits.out <- read.table("../output/fit.parms.txt", sep = ",", header = TRUE)
treats <- read.csv("../data/treatments.csv")
parms <- data.frame(treats, fits.out)
View(fits.out)
fits <- growth.modGomp(input = dat, output.name = "fit.parms",
synergy = F, temp = F, smooth = T, trim = T)
rm(list=ls())
setwd("~/Github/SporeMut/code/4.GrowthCurves/test")
require("png")
require("dplyr")
require("grid")
require("gtools")
require("nlme")
require("MuMIn")
require("bbmle")
source("~/Github/SporeMut/code/4.GrowthCurves/bin/modified_Gomp_diagnostic3.R")
sem <- function(x) sqrt(var(x)/length(x))
cv <- function(x) 100*( sd(x)/mean(x))
LL.95 <- function(x) t.test(x)$conf.int[1]
UL.95 <- function(x) t.test(x)$conf.int[2]
dat <- read.csv("~/Github/SporeMut/code/4.GrowthCurves/data/20230802_GrowthCurve_SporeMut.csv")
dat$Time <- as.numeric(sub("^(\\d+):(\\d+).*", "\\1.\\2", dat$Time))
fits <- growth.modGomp(input = dat, output.name = "fit.parms",
synergy = F, temp = F, smooth = T, trim = T)
head(dat)
fits <- growth.modGomp(input = dat, output.name = "fit.parms",
synergy = F, temp = F, smooth = T, trim = T)
dat <- dat.raw %>%
slice(1:93)
dat.raw <- read.csv("~/Github/SporeMut/code/4.GrowthCurves/data/20230802_GrowthCurve_SporeMut.csv")
dat.raw$Time <- as.numeric(sub("^(\\d+):(\\d+).*", "\\1.\\2", dat.raw$Time))
dat <- dat.raw %>%
slice(1:93)
dat <- dat.raw %>%
filter(row_number() <= 93)
dat
View(dat)
fits <- growth.modGomp(input = dat, output.name = "fit.parms",
synergy = F, temp = F, smooth = T, trim = T)
dat.raw <- read.csv("~/Github/SporeMut/code/4.GrowthCurves/data/20230802_GrowthCurve_SporeMut.csv")
dat.raw$Time <- as.numeric(sub("^(\\d+):(\\d+).*", "\\1.\\2", dat.raw$Time))
# filter so length of data is equal across strains
dat <- dat.raw %>%
filter(row_number() <= 93)
fits <- growth.modGomp(input = dat, output.name = "fit.parms",
synergy = F, temp = F, smooth = T, trim = T)
dat.raw <- read.csv("~/Github/SporeMut/code/4.GrowthCurves/data/20230802_GrowthCurve_SporeMut.csv")
dat.raw$Time <- as.numeric(sub("^(\\d+):(\\d+).*", "\\1.\\2", dat.raw$Time))
dat <- dat.raw %>%
filter(row_number() <= 93)
filter(col_number() <= 5)
dat <- dat.raw %>%
filter(row_number() <= 93)  %>%
select(1:10)
dat
fits <- growth.modGomp(input = dat, output.name = "fit.parms",
synergy = F, temp = F, smooth = T, trim = T)
head(dat)
anc <- dat %>%
select(starts_with("A_"))
anc
dat <- read.csv("~/Github/SporeMut/code/4.GrowthCurves/data/20230802_GrowthCurve_SporeMut.csv")
dat$Time <- as.numeric(sub("^(\\d+):(\\d+).*", "\\1.\\2", dat.raw$Time))
anc <- dat %>%
select(starts_with("A_"))
anc <- dat %>%
select(starts_with("A_"))
anc.fits <-growth.modGomp(input = dat, output.name = "anc.fit.parms",
synergy = F, temp = F, smooth = T, trim = T)
dat <- read.csv("~/Github/SporeMut/code/4.GrowthCurves/data/20230802_GrowthCurve_SporeMut.csv")
dat$Time <- as.numeric(sub("^(\\d+):(\\d+).*", "\\1.\\2", dat.raw$Time))
# filter so length of data is equal across strains
dat <- dat.raw %>%
filter(row_number() <= 93)
anc <- dat %>%
select(starts_with("A_"))
anc.fits <-growth.modGomp(input = dat, output.name = "anc.fit.parms",
synergy = F, temp = F, smooth = T, trim = T)
anc <- dat %>%
select(starts_with("A_"))
anc <- dat %>%
select(starts_with("A_"))
anc.fits <-growth.modGomp(input = anc, output.name = "anc.fit.parms",
synergy = F, temp = F, smooth = T, trim = T)
dim(anc)
anc
anc <- dat %>%
select(starts_with("A_"))
anc.fits <-growth.modGomp(input = anc, output.name = "anc.fit.parms",
synergy = F, temp = F, smooth = T, trim = T)
head(dat)
anc <- dat %>%
select(Time, starts_with("A_"))
head(anc)
anc.fits <-growth.modGomp(input = anc, output.name = "anc.fit.parms",
synergy = F, temp = F, smooth = T, trim = T)
anc.fits.out <- read.table("../output/anc.fit.parms.txt", sep = ",", header = TRUE)
S1 <- dat %>%
select(Time, starts_with("S1_"))
S1.fits <-growth.modGomp(input = S1, output.name = "S1.fit.parms",
synergy = F, temp = F, smooth = T, trim = T)
S1.fits.out <- read.table("../output/S1.fit.parms.txt", sep = ",", header = TRUE)
S6 <- dat %>%
select(Time, starts_with("S6_"))
S6.fits <-growth.modGomp(input = S1, output.name = "S6.fit.parms",
synergy = F, temp = F, smooth = T, trim = T)
S6.fits.out <- read.table("../output/S6.fit.parms.txt", sep = ",", header = TRUE)
S11 <- dat %>%
select(Time, starts_with("S11_"))
S11.fits <-growth.modGomp(input = S11, output.name = "S11.fit.parms",
synergy = F, temp = F, smooth = T, trim = T)
S11.fits.out <- read.table("../output/S11.fit.parms.txt", sep = ",", header = TRUE)
S6 <- dat %>%
select(Time, starts_with("S6_"))
S6.fits <-growth.modGomp(input = S6, output.name = "S6.fit.parms",
synergy = F, temp = F, smooth = T, trim = T)
S6.fits.out <- read.table("../output/S6.fit.parms.txt", sep = ",", header = TRUE)
S51 <- dat %>%
select(Time, starts_with("S51_"))
S51.fits <-growth.modGomp(input = S51, output.name = "S51.fit.parms",
synergy = F, temp = F, smooth = T, trim = T)
S51.fits.out <- read.table("../output/S51.fit.parms.txt", sep = ",", header = TRUE)
S95 <- dat %>%
select(Time, starts_with("S95_"))
S95.fits <-growth.modGomp(input = S95, output.name = "S95.fit.parms",
synergy = F, temp = F, smooth = T, trim = T)
S95.fits.out <- read.table("../output/S95.fit.parms.txt", sep = ",", header = TRUE)
M4 <- dat %>%
select(Time, starts_with("M4_"))
M4.fits <-growth.modGomp(input = M4, output.name = "M4.fit.parms",
synergy = F, temp = F, smooth = T, trim = T)
M4.fits.out <- read.table("../output/M4.fit.parms.txt", sep = ",", header = TRUE)
M13 <- dat %>%
select(Time, starts_with("M13_"))
M13.fits <-growth.modGomp(input = M4, output.name = "M13.fit.parms",
synergy = F, temp = F, smooth = T, trim = T)
M13.fits.out <- read.table("../output/M13.fit.parms.txt", sep = ",", header = TRUE)
M13 <- dat %>%
select(Time, starts_with("M13_"))
M13.fits <-growth.modGomp(input = M13, output.name = "M13.fit.parms",
synergy = F, temp = F, smooth = T, trim = T)
M13.fits.out <- read.table("../output/M13.fit.parms.txt", sep = ",", header = TRUE)
M17 <- dat %>%
select(Time, starts_with("M17_"))
M17.fits <-growth.modGomp(input = M17, output.name = "M17.fit.parms",
synergy = F, temp = F, smooth = T, trim = T)
M17.fits.out <- read.table("../output/M17.fit.parms.txt", sep = ",", header = TRUE)
M19 <- dat %>%
select(Time, starts_with("M19_"))
M19.fits <-growth.modGomp(input = M19, output.name = "M19.fit.parms",
synergy = F, temp = F, smooth = T, trim = T)
M19.fits.out <- read.table("../output/M19.fit.parms.txt", sep = ",", header = TRUE)
M21 <- dat %>%
select(Time, starts_with("M21_"))
M21.fits <-growth.modGomp(input = M21, output.name = "M21.fit.parms",
synergy = F, temp = F, smooth = T, trim = T)
M21.fits.out <- read.table("../output/M21.fit.parms.txt", sep = ",", header = TRUE)
M23 <- dat %>%
select(Time, starts_with("M23_"))
M23.fits <-growth.modGomp(input = M23, output.name = "M23.fit.parms",
synergy = F, temp = F, smooth = T, trim = T)
M23.fits.out <- read.table("../output/M23.fit.parms.txt", sep = ",", header = TRUE)
M26 <- dat %>%
select(Time, starts_with("M26_"))
M26.fits <-growth.modGomp(input = M26, output.name = "M26.fit.parms",
synergy = F, temp = F, smooth = T, trim = T)
M26.fits.out <- read.table("../output/M26.fit.parms.txt", sep = ",", header = TRUE)
M41 <- dat %>%
select(Time, starts_with("M41_"))
M41.fits <-growth.modGomp(input = M41, output.name = "M41.fit.parms",
synergy = F, temp = F, smooth = T, trim = T)
M41.fits.out <- read.table("../output/M41.fit.parms.txt", sep = ",", header = TRUE)
M54 <- dat %>%
select(Time, starts_with("M54_"))
M54.fits <-growth.modGomp(input = M54, output.name = "M54.fit.parms",
synergy = F, temp = F, smooth = T, trim = T)
M54.fits.out <- read.table("../output/M54.fit.parms.txt", sep = ",", header = TRUE)
S95.fits.out
M79 <- dat %>%
select(Time, starts_with("M79_"))
M79 <- fits <-growth.modGomp(input = M79, output.name = "M79.fit.parms",
synergy = F, temp = F, smooth = T, trim = T)
M79.fits.out <- read.table("../output/M79.fit.parms.txt", sep = ",", header = TRUE)
all.fits <- rbind(anc.fits.out, S1.fits.out, S6.fits.out, S11.fits.out,
S22.fits.out, S51.fits.out, S95.fits.out, M4.fits.out,
M13.fits.out, M17.fits.out, M19.fits.out, M21.fits.out,
M23.fits.out,, M26.fits.out, M41.fits.out, M54.fits.out,
M79.fits.out)
all.fits <- rbind(anc.fits.out, S1.fits.out, S6.fits.out, S11.fits.out,
S21.fits.out, S51.fits.out, S95.fits.out, M4.fits.out,
M13.fits.out, M17.fits.out, M19.fits.out, M21.fits.out,
M23.fits.out,, M26.fits.out, M41.fits.out, M54.fits.out,
M79.fits.out)
S22.fits.out <- read.table("../output/S22.fit.parms.txt", sep = ",", header = TRUE)
S22 <- dat %>%
select(Time, starts_with("S22_"))
S22.fits <-growth.modGomp(input = S22, output.name = "S22.fit.parms",
synergy = F, temp = F, smooth = T, trim = T)
S22.fits.out <- read.table("../output/S22.fit.parms.txt", sep = ",", header = TRUE)
all.fits <- rbind(anc.fits.out, S1.fits.out, S6.fits.out, S11.fits.out,
S22.fits.out, S51.fits.out, S95.fits.out, M4.fits.out,
M13.fits.out, M17.fits.out, M19.fits.out, M21.fits.out,
M23.fits.out,, M26.fits.out, M41.fits.out, M54.fits.out,
M79.fits.out)
all.fits <- rbind(anc.fits.out, S1.fits.out)
all.fits
all.fits <- rbind(anc.fits.out, S1.fits.out, S6.fits.out, S11.fits.out)
all.fits <- rbind(anc.fits.out, S1.fits.out, S6.fits.out, S11.fits.out,
S22.fits.out, S51.fits.out, S95.fits.out, M4.fits.out)
all.fits <- rbind(anc.fits.out, S1.fits.out, S6.fits.out, S11.fits.out,
S22.fits.out, S51.fits.out, S95.fits.out, M4.fits.out,
M13.fits.out, M17.fits.out, M19.fits.out, M21.fits.out)
all.fits <- rbind(anc.fits.out, S1.fits.out, S6.fits.out, S11.fits.out,
S22.fits.out, S51.fits.out, S95.fits.out, M4.fits.out,
M13.fits.out, M17.fits.out, M19.fits.out, M21.fits.out,
M23.fits.out, M26.fits.out, M41.fits.out, M54.fits.out,
M79.fits.out)
# Combine fits with strain and treatment information (e.g, cell type, mutations, etc.)
treats <- read.csv("../data/treatments.csv")
parms <- data.frame(treats, fits.out)
parms <- data.frame(treats, all.fits)
